name: Build and Deploy Landing Page with Docker and SonarCloud

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image for Landing Page
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18' # Specify your Node.js version

    - name: Install dependencies
      run: npm install

    - name: Install SonarScanner
      run: |
        npm install -g sonar-scanner

    - name: Run SonarCloud scan
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Store your SonarCloud token in GitHub Secrets
        SONAR_HOST_URL: "https://sonarcloud.io" # SonarCloud URL
      run: |
        sonar-scanner \
          -Dsonar.projectKey=rohitsoni1209_trythat-Landing \
          -Dsonar.organization=rohitsoni1209 \
          -Dsonar.sources=. \
          -Dsonar.host.url=$SONAR_HOST_URL \
          -Dsonar.login=$SONAR_TOKEN \
          -X

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor

  
  deploy:
    name: Deploy Landing Page Application
    needs: build-and-push
    runs-on: ubuntu-latest    
                
    steps:
      - name: Set up SSH Key for EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

      - name: SSH into EC2 and Deploy Landing Page Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Update and install Docker on EC2
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -aG docker ec2-user

            # Log in to Docker Hub
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Pull the latest Landing Page image
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/trythat-landing:latest

            # Remove old container if it exists
            sudo docker stop trythat-landing || true
            sudo docker rm trythat-landing || true

            # Run the Landing Page Docker container
            sudo docker run -d -p 8080:80 --name trythat-landing ${{ secrets.DOCKER_USERNAME }}/trythat-landing:latest

            # Optionally remove unused containers and images
            sudo docker system prune -f
          EOF
