name: Build and Deploy Landing Page with Docker
#
on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Image for Landing Page
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Build Docker Image for Landing Page
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/trythat-landing:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/trythat-landing:latest

  deploy:
    name: Deploy Landing Page Application
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH Key for EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > /tmp/id_rsa
          chmod 600 /tmp/id_rsa

      - name: SSH into EC2 and Deploy Landing Page Docker Container
        run: |
          ssh -o StrictHostKeyChecking=no -i /tmp/id_rsa ec2-user@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            # Update and install Docker on EC2
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -aG docker ec2-user

            # Log in to Docker Hub
            sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            # Pull the latest Landing Page image
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/trythat-landing:latest

            # Remove old container if it exists
            sudo docker stop trythat-landing || true
            sudo docker rm trythat-landing || true

            # Run the Landing Page Docker container
            sudo docker run -d -p 8080:80 --name trythat-landing ${{ secrets.DOCKER_USERNAME }}/trythat-landing:latest

            # Optionally remove unused containers and images
            sudo docker system prune -f
          EOF
